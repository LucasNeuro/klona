---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Klonatec - Integração Inteligente de Softwares. Transformamos dezenas de softwares fragmentados em uma única solução poderosa com Inteligência Artificial." } = Astro.props;
---

<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content="integração inteligente, software, IA, automação, Brasil, klonatec, inteligência artificial, softwares fragmentados, consultoria tecnológica" />
    <meta name="author" content="Klonatec" />
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="theme-color" content="#ffffff">
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://klonatec.com/" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="https://klonatec.com/og-image.jpg" />
    <meta property="og:site_name" content="Klonatec" />
    <meta property="og:locale" content="pt_BR" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://klonatec.com/" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="https://klonatec.com/twitter-image.jpg" />
    
    <!-- Schema Markup -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Organization",
      "name": "Klonatec",
      "description": "Pioneiros em Integração Inteligente de Softwares no Brasil. Transformamos dezenas de softwares fragmentados em uma única solução poderosa com Inteligência Artificial.",
      "url": "https://klonatec.com",
      "logo": "https://klonatec.com/logo.png",
      "foundingDate": "2024",
      "address": {
        "@type": "PostalAddress",
        "addressCountry": "BR"
      },
      "contactPoint": {
        "@type": "ContactPoint",
        "contactType": "customer service",
        "email": "contato@klonatec.com"
      },
      "sameAs": [
        "https://klonatec.com"
      ],
      "knowsAbout": [
        "Integração Inteligente de Softwares",
        "Inteligência Artificial",
        "Automação Empresarial",
        "Consultoria Tecnológica"
      ]
    }
    </script>
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
    <!-- Custom Styles -->
    <style>
      :root {
        --primary: #4f46e5;
        --primary-light: #6366f1;
        --secondary: #06b6d4;
        --accent: #f59e0b;
        --success: #10b981;
        --danger: #ef4444;
        --dark: #0f172a;
        --gray-50: #f8fafc;
        --gray-100: #f1f5f9;
        --gray-900: #0f172a;
      }

      .gradient-text {
        background: linear-gradient(135deg, #6366f1, #06b6d4, #10b981);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        background-size: 400% 400%;
        animation: gradient 8s ease infinite;
      }

      @keyframes gradient {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
      }

      .fade-in {
        opacity: 0;
        transform: translateY(30px);
        transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
      }

      .fade-in.visible {
        opacity: 1;
        transform: translateY(0);
      }

      .hero-bg {
        background: 
          radial-gradient(circle at 25% 25%, rgba(79, 70, 229, 0.15) 0%, transparent 50%),
          radial-gradient(circle at 75% 75%, rgba(6, 182, 212, 0.15) 0%, transparent 50%);
        animation: float 20s ease-in-out infinite;
      }

      @keyframes float {
        0%, 100% { transform: translate(0, 0) scale(1); }
        50% { transform: translate(-20px, -20px) scale(1.1); }
      }

      .cta-bg {
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
        animation: moveGrid 20s linear infinite;
      }

      @keyframes moveGrid {
        0% { transform: translate(0, 0); }
        100% { transform: translate(10px, 10px); }
      }
    </style>
  </head>
  <body class="font-sans text-slate-700 leading-relaxed">
    <slot />
    
    <script>
      // Intersection Observer para animações
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          }
        });
      }, observerOptions);

      // Observar elementos com classe fade-in
      document.addEventListener('DOMContentLoaded', () => {
        const fadeElements = document.querySelectorAll('.fade-in');
        fadeElements.forEach(el => observer.observe(el));
      });
    </script>
  </body>
</html>
